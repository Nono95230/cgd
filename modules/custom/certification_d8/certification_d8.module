<?php

use Drupal\Core\Entity\EntityInterface;


function certification_d8_node_presave(EntityInterface $entity) {

	// On vérifie qu'il s'agit de l'enregistrement
	// d'un contenu de type certification
	if ( 'certification_d8' == $entity->getType() ) {

		// On récupère certaines informations du contenu
		// afin de constituer un titre parlant
		$certifThemeId = $entity->get('field_certif_theme')->getString();
		$certifName = taxonomy_term_load($certifThemeId)->getName();

    //$scoreDate = format_date($entity->getCreatedTime(), 'format_date_classique');
		$certifTime = strtotime($entity->get('field_certif_date_passage')->getString());
		$certifDate = format_date($certifTime, 'format_date_classique');

		$certifScore = $entity->get('field_certif_result')->getString();

		$certifUser = user_load($entity->getOwnerId());
		$certifUserFirstName = $certifUser->get('field_prenom')->getString();
		$certifUserLastName = $certifUser->get('field_nom')->getString();
		$certifUserName = $certifUserFirstName . ' ' . $certifUserLastName;


		// On défini le nouveau titre
		$certifTitle  = 'Certification '. $certifName;
		$certifTitle .= ' - '. $certifUserName;
		$certifTitle .= ' - ' . $certifDate;
		$certifTitle .= ' - Score : ' . $certifScore . ' %';

		$entity->setTitle($certifTitle);
	}
}







/*
function certification_d8_form_alter(&$form, &$form_state, $form_id) {

	$form['field_date_passage']['#after_build'] = array('max_date');

	if(isset($form['sort_order'])){
		$form['sort_order']['#type'] = FALSE;
	}


	if($form_id == 'node_certification_d8_form' || $form_id == 'node_certification_d8_edit_form'){
	   $form['field_date_passage']['#after_build'] = array('max_date');



		// Cache le menu  en ajout et modification et lui attribuer le nom de l'utilisateur par default
		$title_widget = &$form['title']['widget'][0];
		//$default = (!empty($title_widget['value']['#default_value'])? $title_widget['value']['#default_value'] :'Certification');
		$default = $title_widget['value']['#default_value'] ?:'Certification';
		$title_widget['value']['#default_value'] = $default;
		$title_widget['value']['#type'] = 'value';
		$title_widget['value']['#required'] = FALSE;
		$title_widget['revision_information']['#access'] = FALSE;
		$form['title']['#access'] = FALSE;
		$form['actions']['preview']['#access']    = FALSE;
		$form['revision']['#access'] = FALSE;
		$form['revision_information']['#access'] = FALSE;

	}
}
function max_date($element){
$date = date('Y-m-d');
	$element['widget']['0']['value']['date']['#attributes'] = ['max'=>$date];
	return $element;
}
*/
